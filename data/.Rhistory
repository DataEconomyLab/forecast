c3 <- ggplot(data=covid19US, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue", colour="확진자수") +
geom_line(aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=deaths), color="red", colour="사망자수") +
ylab("신규확진자수") +
xlab("날짜") +
ggtitle("미국") +
theme_bw(base_family = "NanumGothic")
c4 <- ggplot(data=covid19FR, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue", colour="확진자수") +
geom_line(aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=deaths), color="red", colour="사망자수") +
ylab("신규확진자수") +
xlab("날짜") +
ggtitle("프랑스") +
theme_bw(base_family = "NanumGothic")
grid.arrange(c1, c2, c3, c4, ncol=2, nrow=2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align = "center")
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(zoo)
library(ggplot2)
library(gridExtra)
covid19 <- read.csv("C:/Users/ljyjj/Documents/방송대/3학년과제/coviddata.csv", header=T)
covid19KR <- subset(covid19, geoId=="KR")
covid19CN <- subset(covid19, geoId=="CN")
covid19US <- subset(covid19, geoId=="US")
covid19FR <- subset(covid19, geoId=="FR")
c1 <- ggplot(data=covid19KR, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue", colour="확진자수") +
xlab("날짜") +
ggtitle("한국") +
theme_bw(base_family = "NanumGothic")
c2 <- ggplot(data=covid19CN, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue", colour="확진자수")
xlab("날짜") +
ggtitle("중국") +
theme_bw(base_family = "NanumGothic")
c3 <- ggplot(data=covid19US, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue", colour="확진자수") +
xlab("날짜") +
ggtitle("미국") +
theme_bw(base_family = "NanumGothic")
c4 <- ggplot(data=covid19FR, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue", colour="확진자수") +
xlab("날짜") +
ggtitle("프랑스") +
theme_bw(base_family = "NanumGothic")
grid.arrange(c1, c2, c3, c4, ncol=2, nrow=2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align = "center")
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(zoo)
library(ggplot2)
library(gridExtra)
covid19 <- read.csv("C:/Users/ljyjj/Documents/방송대/3학년과제/coviddata.csv", header=T)
covid19KR <- subset(covid19, geoId=="KR")
covid19CN <- subset(covid19, geoId=="CN")
covid19US <- subset(covid19, geoId=="US")
covid19FR <- subset(covid19, geoId=="FR")
c1 <- ggplot(data=covid19KR, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
theme_bw(base_family = "NanumGothic")
c2 <- ggplot(data=covid19CN, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue")
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("중국") +
theme_bw(base_family = "NanumGothic")
c3 <- ggplot(data=covid19US, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("미국") +
theme_bw(base_family = "NanumGothic")
c4 <- ggplot(data=covid19FR, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("프랑스") +
theme_bw(base_family = "NanumGothic")
grid.arrange(c1, c2, c3, c4, ncol=2, nrow=2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align = "center")
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(zoo)
library(ggplot2)
library(gridExtra)
covid19 <- read.csv("C:/Users/ljyjj/Documents/방송대/3학년과제/coviddata.csv", header=T)
covid19KR <- subset(covid19, geoId=="KR")
covid19CN <- subset(covid19, geoId=="CN")
covid19US <- subset(covid19, geoId=="US")
covid19FR <- subset(covid19, geoId=="FR")
c1 <- ggplot(data=covid19KR, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
theme_bw(base_family = "NanumGothic")
c2 <- ggplot(data=covid19CN, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("중국") +
theme_bw(base_family = "NanumGothic")
c3 <- ggplot(data=covid19US, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("미국") +
theme_bw(base_family = "NanumGothic")
c4 <- ggplot(data=covid19FR, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("프랑스") +
theme_bw(base_family = "NanumGothic")
grid.arrange(c1, c2, c3, c4, ncol=2, nrow=2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.align = "center")
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(zoo)
library(ggplot2)
library(gridExtra)
covid19 <- read.csv("C:/Users/ljyjj/Documents/방송대/3학년과제/coviddata.csv", header=T)
covid19KR <- subset(covid19, geoId=="KR")
covid19CN <- subset(covid19, geoId=="CN")
covid19US <- subset(covid19, geoId=="US")
covid19FR <- subset(covid19, geoId=="FR")
c1 <- ggplot(data=covid19KR, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
theme_bw(base_family = "NanumGothic")
c2 <- ggplot(data=covid19CN, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("중국") +
theme_bw(base_family = "NanumGothic")
c3 <- ggplot(data=covid19US, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("미국") +
theme_bw(base_family = "NanumGothic")
c4 <- ggplot(data=covid19FR, aes(x=as.Date(dateRep, format="%d/%m/%Y"), y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("프랑스") +
theme_bw(base_family = "NanumGothic")
grid.arrange(c1, c2, c3, c4, ncol=2, nrow=2)
install.packages("coronavirus)
dfs
""
sdf
"
install.packages("coronavirus")
library(coronavirus)
cononavirus
coronavirus
UCBAdmissions
data(UCBAdmissions)
str(UCBAdmissions)
par(mfrow=c(1,2))
mosaicplot(apply(UCBAdmissions, c(2,1), sum), color=c("red","blue"), main="전체 합격자 비율", ylab="불합격/합격", xlab="성별")
mosaicplot(~Dept+Gender+Admit, data=UCBAdmissions, color=c("red","blue"), dir=c("v","v","h"), off=1, main="과별 합격자 비율", ylab="불합격/합격", xlab="과별/성별")
library(coronavirus)
library(ggplot2)
data(coronavirus)
str(coronavirus)
covid19KR <- subset(coronavirus, country=="Korea, South", type = "confirmed")
datebreaks <- seq(as.Date("2020-01-22"), as.Date("2021-01-21"), "1 year")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks=datebreaks) +
theme_bw(base_family = "NanumGothic")
covid19KR <- subset(coronavirus, country=="Korea, South", type = "confirmed")
datebreaks <- seq(as.Date("2020-01-22"), as.Date("2021-01-21"), "1 year")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks=datebreaks, labels=date_format("%Y")) +
theme_bw(base_family = "NanumGothic")
library(coronavirus)
library(ggplot2)
library(scales)
data(coronavirus)
str(coronavirus)
covid19KR <- subset(coronavirus, country=="Korea, South", type = "confirmed")
datebreaks <- seq(as.Date("2020-01-22"), as.Date("2021-01-21"), "1 year")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks=datebreaks, labels=date_format("%Y")) +
theme_bw(base_family = "NanumGothic")
library(coronavirus)
library(ggplot2)
library(scales)
data(coronavirus)
str(coronavirus)
covid19KR <- subset(coronavirus, country=="Korea, South", type = "confirmed")
datebreaks <- seq(as.Date("2020-01-22"), as.Date("2021-01-21"), "1 year")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks=datebreaks, labels=date_format("%Y%M"), expand=c(0.01,0.01)) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks=datebreaks, labels=date_format("%Y-%m"), expand=c(0.01,0.01)) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks=datebreaks, labels=date_format("%Y-%m"), expand=c(0.01,0.01)) +
geom_point() +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_continuous(breaks=seq()) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks=datebreaks, labels=date_format("%Y-%m"), expand=c(0.01,0.01)) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks=datebreaks, labels=date_format("%Y-%m-%d"), expand=c(0.01,0.01)) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
theme_bw(base_family = "NanumGothic")
covid19KR <- subset(coronavirus, country=="Korea, South", type = "confirmed")
datebreaks <- seq(as.Date("2020-01-22"), as.Date("2021-01-21"), "1 year")
#scale_x_date(breaks=datebreaks, labels=date_format("%Y-%m-%d"), expand=c(0.01,0.01)) +
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks=datebreaks, labels=date_format("%Y-%m-%d")) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks=datebreaks, labels=date_format("%Y-%m-%d"), expand=c(1,1)) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks=datebreaks, labels=date_format("%Y-%m-%d"), expand=c(0.1,0.1)) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks=datebreaks, labels=date_format("%Y-%m-%d"), expand=c(0.01,0.01)) +
theme_bw(base_family = "NanumGothic")
library(coronavirus)
library(ggplot2)
library(scales)
data(coronavirus)
str(coronavirus)
covid19KR <- subset(coronavirus, country=="Korea, South", type = "confirmed")
datebreaks <- seq(as.Date("2020-01-22"), as.Date("2021-01-21"), "1 year")
#scale_x_date(breaks=datebreaks, labels=date_format("%Y-%m-%d"), expand=c(0.01,0.01)) +
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_date(breaks="1 months", labels=date_format("%Y-%m"), expand=c(0.01,0.01)) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y-%m"), expand=c(0.01,0.01)) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y%m%d"), expand=c(0.01,0.01)) +
theme_bw(base_family = "NanumGothic")
covid19KR
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y%m%d"), expand=c(0.01,0.01), limits = c("2020-01-22", "2021-01-21")) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line() +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y%m%d"), expand=c(0.01,0.01), limits = c("2020-01-22", "2021-01-21")) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line() +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y%m%d"), expand=c(0.01,0.01), limits = c("2020-01-22", "2021-01-21")) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line() +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y%m%d"), expand=c(0.01,0.01), limits = c("2020-01-22", "2021-01-21")) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line() +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y%m%d"), expand=c(0.01,0.01), limits = c("2020-01-22", "2021-01-21")) +
theme_bw()
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y%m%d"), expand=c(0.01,0.01), limits = c("2020-01-22", "2021-01-21")) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(color="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y%m%d"), expand=c(0.01,0.01)) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line() +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y%m%d"), expand=c(0.01,0.01)) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line() +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y%m%d"), expand=c(0.01,0.01), limits = c('2020-01-22', '2021-01-21')) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line() +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y%m%d"), expand=c(0.01,0.01), limits = as.Date(c('2020-01-22', '2021-01-21'))) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_line(linetype = "dashed") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y%m%d"), expand=c(0.01,0.01), limits = as.Date(c('2020-01-22', '2021-01-21'))) +
theme_bw(base_family = "NanumGothic")
covid19KR <- subset(coronavirus, country=="Korea, South", type = "confirmed")
covid19KR
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_area(colour="black", fill="blue", alpha=.2) +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y%m%d"), expand=c(0.01,0.01), limits = as.Date(c('2020-01-22', '2021-01-21'))) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_area(colour="black", fill="blue") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y%m%d"), expand=c(0.01,0.01), limits = as.Date(c('2020-01-22', '2021-01-21'))) +
theme_bw(base_family = "NanumGothic")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_area(colour="black", fill="white") +
xlab("날짜") +
ylab("신규확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y%m%d"), expand=c(0.01,0.01), limits = as.Date(c('2020-01-22', '2021-01-21'))) +
theme_bw(base_family = "NanumGothic")
library(coronavirus)
library(ggplot2)
library(scales)
data(coronavirus)
str(coronavirus)
covid19KR <- subset(coronavirus, country=="Korea, South", type = "confirmed")
ggplot(data=covid19KR, aes(x=date, y=cases)) +
geom_area(colour="black", fill="white") +
xlab("날짜") +
ylab("확진자수") +
ggtitle("한국") +
scale_x_date(breaks="1 months", labels=date_format("%Y%m%d"), expand=c(0.01,0.01), limits = as.Date(c('2020-01-22', '2021-01-21'))) +
theme_bw(base_family = "NanumGothic")
setwd("C:/Users/ljyjj/Documents/GitHub/forecast/data")
forecast_report <- ts(read.csv("forecast_report.csv", header=TRUE), start=1982, frequency=4)
forecast_report
plot(forecast_report[,1]/1000, ylab="분기민간소비GDP(조 원)", xlab="연도", col="black")
lines(forecast_report[,2]/1000, col="mediumpurple3")
head(forecast_report)
setwd("C:/Users/ljyjj/Documents/GitHub/forecast/data")
forecast_report <- ts(read.csv("forecast_report.csv", header=TRUE), start=1982, frequency=4)
head(forecast_report)
plot(forecast_report[,1]/1000, ylab="분기민간소비GDP(조 원)", xlab="연도", col="black")
lines(forecast_report[,2]/1000, col="mediumpurple3")
forecast_report[,2]
par(mfrow=c(2,2))
spectrum(forecast_report[,1], spans=c(3,3), main="분기민간소비GDP 원계열", col="mediumpurple3")
spectrum(forecast_report[,2], spans=c(3,3), main="분기민간소비GDP 계절조정계열", col="mediumpurple3")
spectrum(na.omit(diff(log(forecast_report[,1]))), spans=c(3,3), main="diff(log(GDP))", col="mediumpurple3")
spectrum(na.omit(diff(log(forecast_report[,1]), 4)), spans=c(3,3), main="diff(log(GDP), 4)", col="mediumpurple3")
par(mfrow=c(2,2))
spectrum(forecast_report[,1], spans=c(3,3), main="분기민간소비GDP 원계열", col="mediumpurple3")
spectrum(forecast_report[,2], spans=c(3,3), main="분기민간소비GDP 계절조정계열", col="mediumpurple3")
spectrum(na.omit(diff(log(forecast_report[,1]))), spans=c(3,3), main="diff(log(GDP))", col="mediumpurple3")
spectrum(na.omit(diff(log(forecast_report[,1]), 4)), spans=c(3,3), main="diff(log(GDP), 4)", col="mediumpurple3")
acf(diff(log(forecast_report[,1])), main="로그 계열 상관도표")
pacf(diff(log(forecast_report[,1])), main="로그 계열 부분상관도표")
acf(diff(log(forecast_report[,1]), 4), main="로그차분 계열 상관도표")
pacf(diff(log(forecast_report[,1]), 4), main="로그차분 계열 부분상관도표")
par(mfrow=c(2,2))
acf(diff(log(forecast_report[,1])), main="로그 계열 상관도표")
pacf(diff(log(forecast_report[,1])), main="로그 계열 부분상관도표")
acf(diff(log(forecast_report[,1]), 4), main="로그차분 계열 상관도표")
pacf(diff(log(forecast_report[,1]), 4), main="로그차분 계열 부분상관도표")
plot(diff(log(forecast_report[,1])), ylab="분기민간소비GDP(조 원)", xlab="연도", col="black")
acf(diff(log(forecast_report[,1])), main="로그 계열 상관도표")
pacf(diff(log(forecast_report[,1])), main="로그 계열 부분상관도표")
gdp_fit = arima(log(forecast_report[,1]))
gdp_fit = arima(log(forecast_report[,1]))
# ARIMA 모형의 추정
report_fit = arima(log(forecast_report[,1]), order=c(0,1,1))
summary(report_fit)
summary(report_fit1)
# ARIMA 모형의 과대적합 검토
report_fit1 = arima(log(forecast_report[,1]), order=c(1,1,1))
summary(report_fit1)
report_fit2 = arima(log(forecast_report[,1]), order=c(0,1,2))
summary(report_fit1)
# ARIMA 모형의 진단
tsdiag(report_fit)
plot(forecast(report_fit, h=12))
library(forecast)
plot(diff(log(forecast_report[,1])), ylab="분기민간소비GDP(조 원)", xlab="연도", col="black")
acf(diff(log(forecast_report[,1])), main="로그 계열 상관도표")
pacf(diff(log(forecast_report[,1])), main="로그 계열 부분상관도표")
gdp_fit = arima(log(forecast_report[,1]))
# ARIMA 모형의 추정
report_fit = arima(log(forecast_report[,1]), order=c(0,1,1))
summary(report_fit)
# ARIMA 모형의 과대적합 검토
report_fit1 = arima(log(forecast_report[,1]), order=c(1,1,1))
summary(report_fit1)
report_fit2 = arima(log(forecast_report[,1]), order=c(0,1,2))
summary(report_fit1)
# ARIMA 모형의 진단
tsdiag(report_fit)
plot(forecast(report_fit, h=12))
# ARIMA 모형의 진단
tsdiag(report_fit)
plot(diff(log(forecast_report[,1])), ylab="분기민간소비GDP(조 원)", xlab="연도", col="black")
acf(diff(log(forecast_report[,1])), main="로그 계열 상관도표")
# ARIMA 모형의 추정
report_fit = arima(log(forecast_report[,1]), order=c(0,1,0))
summary(report_fit)
pacf(diff(log(forecast_report[,1], 4)), main="로그 계열 부분상관도표")
